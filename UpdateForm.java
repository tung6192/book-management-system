/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Assignment.Assignment4;

import static Assignment.Assignment4.RunBookMS.connection;
import java.awt.HeadlessException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.*;

/**
 *
 * @author dinhtungtp
 */
public class UpdateForm extends javax.swing.JFrame {
    String action, code, author, title;
    int remained;
    PreparedStatement preparedStmt;
    
    /**
     * Creates new form sellForm
     */
    public UpdateForm(String action, String code, String author, String title, int remained) {
        this.action = action;
        this.code = code;
        this.author = author;
        this. title = title;
        this.remained = remained;
        
        initComponents();
        showInfo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the UpdateForm Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        codeLable = new javax.swing.JLabel();
        authorLable = new javax.swing.JLabel();
        titleLable = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        codeField = new javax.swing.JTextField();
        authorField = new javax.swing.JTextField();
        titleField = new javax.swing.JTextField();
        amountField = new javax.swing.JTextField();
        saveBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel.setBorder(BorderFactory.createTitledBorder(""));

        codeLable.setText("Code");

        authorLable.setText("Author");

        titleLable.setText("Title");

        jLabel4.setText("Amounts*");

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        closeBtn.setText("Close");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(closeBtn))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(codeLable)
                            .addComponent(authorLable)
                            .addComponent(titleLable)
                            .addComponent(jLabel4))
                        .addGap(24, 24, 24)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(authorField, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(titleField)
                            .addComponent(codeField)
                            .addComponent(amountField))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codeLable)
                    .addComponent(codeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authorLable)
                    .addComponent(authorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleLable)
                    .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBtn)
                    .addComponent(closeBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 26, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        dispose();
    }//GEN-LAST:event_closeBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // Sell action
        if (action.equals("Sell")){
            if (amountField.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Enter the number of book you want to sell", "Sell Error", JOptionPane.ERROR_MESSAGE);
                amountField.requestFocus();
            } else if (Integer.parseInt(amountField.getText()) > remained){
                JOptionPane.showMessageDialog(null, "You dont have enough books to sell. Maximum: " + remained, "Sell Error", JOptionPane.ERROR_MESSAGE);
                amountField.requestFocus();
            } else {
                try {
                    preparedStmt = connection.prepareStatement("UPDATE book_system SET Sold = Sold + ? WHERE Code = ?");
                    preparedStmt.setInt(1, Integer.parseInt(amountField.getText()));
                    preparedStmt.setString(2,code);
                    
                    preparedStmt.executeUpdate();
                    
                    // Update table
                    BookManagement.showTable();
                    
                    JOptionPane.showMessageDialog(null, "Book has been sold");
                    dispose();
                    
                } catch (HeadlessException | NumberFormatException | SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Error happend. Action is unsuccessful", "Error", JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(UpdateForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        // Buy More action
        } else if (action.equals("Buy More")){
            if (amountField.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Enter the number of book you want to buy", "Buy Error", JOptionPane.ERROR_MESSAGE);
                amountField.requestFocus();
            } else {
                try {
                    preparedStmt = connection.prepareStatement("UPDATE book_system SET Bought = Bought + ? WHERE Code = ?");
                    preparedStmt.setInt(1, Integer.parseInt(amountField.getText()));
                    preparedStmt.setString(2,code);
                    
                    preparedStmt.executeUpdate();
                    
                    // Update table
                    BookManagement.showTable();
                    
                    JOptionPane.showMessageDialog(null, "More Book has been added to the system");
                    dispose();
                } catch (HeadlessException | NumberFormatException | SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Error happend. Action is unsuccessful", "Error", JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(UpdateForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        // Add New Action
        } else {
            String code = codeField.getText();
            String author = authorField.getText();
            String title = titleField.getText();
            String amountS = amountField.getText();
            
            if (code.equals("") || title.equals("") || amountS.equals("")){
                JOptionPane.showMessageDialog(null, "Please fill all the required fields", "Missing information", JOptionPane.ERROR_MESSAGE);
            } else {
                try {
                    preparedStmt = connection.prepareStatement("SELECT * FROM book_system WHERE Code = ?");
                    preparedStmt.setString(1,code);
                    ResultSet results = preparedStmt.executeQuery();
                    
                    if (results.next()){
                        JOptionPane.showMessageDialog(null, "Book Code exists in the system", "Duplication Code", JOptionPane.ERROR_MESSAGE);
                    } else {
                        preparedStmt = connection.prepareStatement("INSERT INTO book_system(Code, Author, Title, Bought) Values(?,?,?,?)");
                        preparedStmt.setString(1,code);
                        preparedStmt.setString(2,author);
                        preparedStmt.setString(3,title);
                        preparedStmt.setInt(4,Integer.parseInt(amountS));
                        
                        preparedStmt.executeUpdate();
                        
                        JOptionPane.showMessageDialog(null, "New Book has been added to the system");
                        dispose();
                        
                        // Update Table
                        BookManagement.showTable();
                    }
                } catch (HeadlessException | NumberFormatException | SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Error happend. Action is unsuccessful", "Error", JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(UpdateForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UpdateForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(UpdateForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(UpdateForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            Logger.getLogger(UpdateForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateForm("","","","",0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountField;
    private javax.swing.JTextField authorField;
    private javax.swing.JLabel authorLable;
    private javax.swing.JButton closeBtn;
    private javax.swing.JTextField codeField;
    private javax.swing.JLabel codeLable;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel panel;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextField titleField;
    private javax.swing.JLabel titleLable;
    // End of variables declaration//GEN-END:variables

    private void showInfo() {
        // set up Field
        codeField.setText(code);
        codeField.setEditable(false);
        authorField.setText(author);
        authorField.setEditable(false);
        titleField.setText(title);
        titleField.setEditable(false);
        
        // set up title & customize for each action
        TitledBorder titleB;
        if (action.equals("Sell")){
            // set Title
            setTitle("Sell UpdateForm");
            titleB = BorderFactory.createTitledBorder("Sell Book");
            panel.setBorder(titleB);
            amountField.requestFocus();
            
        } else if (action.equals("Add New")){
            setTitle("Add New UpdateForm");
            titleB = BorderFactory.createTitledBorder("Add New Book");
            panel.setBorder(titleB);
            
            // allow Field Editable
            codeField.setEditable(true);
            authorField.setEditable(true);
            titleField.setEditable(true);
            
            // required field
            codeLable.setText("Code*");
            titleLable.setText("Title*");
        } else {
            setTitle("Buy More");
            titleB = BorderFactory.createTitledBorder("Buy More Book");
            panel.setBorder(titleB);
            amountField.requestFocus();
        }
    }
}
